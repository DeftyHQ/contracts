{
  "contractName": "DeftyWrap",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x01ffc9a7"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x06fdde03"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x081812fc"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x095ea7b3"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x18160ddd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x23b872dd"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x2f745c59"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x42842e0e"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x4f6ccce7"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mintWithTokenURI",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x50bb4e7f"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x6352211e"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "sender",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x67e404ce"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "proofRegistery",
      "outputs": [
        {
          "name": "cdpId",
          "type": "bytes32"
        },
        {
          "name": "previousOwner",
          "type": "address"
        },
        {
          "name": "state",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x6da039c9"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x70a08231"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x715018a6"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8da5cb5b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8f32d59b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x95d89b41"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x983b2d56"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x98650275"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa22cb465"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xaa271e1a"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xb88d4fde"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xc87b56dd"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cupLad",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xe12eb0ee"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cdpAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xe3d08d98"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xe985e9c5"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cupId",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xf2390cd4"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xf2fde38b"
    },
    {
      "inputs": [
        {
          "name": "_cdpAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "cdpId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "myself",
          "type": "address"
        }
      ],
      "name": "Wrap",
      "type": "event",
      "signature": "0xb8150eb8316d342b8a2584790fe26d11127f6afd4e4779c874bcf05148135dc6"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event",
      "signature": "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event",
      "signature": "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event",
      "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event",
      "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event",
      "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event",
      "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cdpAddress",
          "type": "address"
        }
      ],
      "name": "setCdpAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x9bca8b6e"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCdpAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xc598db91"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cdpId",
          "type": "bytes32"
        }
      ],
      "name": "proveOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xd2491dc9"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cdpId",
          "type": "bytes32"
        }
      ],
      "name": "wrap",
      "outputs": [
        {
          "name": "_deftyTokenId",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x5f029ebe"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_deftyTokenId",
          "type": "uint256"
        }
      ],
      "name": "unwrap",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xde0e9a3e"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b50604051602080620040f1833981018060405260208110156200003357600080fd5b81019080805190602001909291905050506040805190810160405280600a81526020017f4465667479546f6b656e000000000000000000000000000000000000000000008152506040805190810160405280600381526020017f44545900000000000000000000000000000000000000000000000000000000008152508181336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3620001ab6301ffc9a77c010000000000000000000000000000000000000000000000000000000002620002d3640100000000026401000000009004565b620001e86380ac58cd7c010000000000000000000000000000000000000000000000000000000002620002d3640100000000026401000000009004565b6200022563780e9d637c010000000000000000000000000000000000000000000000000000000002620002d3640100000000026401000000009004565b81600a90805190602001906200023d9291906200067c565b5080600b9080519060200190620002569291906200067c565b5062000294635b5e139f7c010000000000000000000000000000000000000000000000000000000002620002d3640100000000026401000000009004565b50505050620002b23362000391640100000000026401000000009004565b620002cc81620003fb640100000000026401000000009004565b506200072b565b63ffffffff7c010000000000000000000000000000000000000000000000000000000002817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515156200032557600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b620003b581600d620004fb6401000000000262003311179091906401000000009004565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b62000414620005be640100000000026401000000009004565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515620004b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f556e617574686f7269736564000000000000000000000000000000000000000081525060200191505060405180910390fd5b80600f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156200053857600080fd5b620005538282620005e7640100000000026401000000009004565b1515156200056057600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156200062557600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620006bf57805160ff1916838001178555620006f0565b82800160010185558215620006f0579182015b82811115620006ef578251825591602001919060010190620006d2565b5b509050620006ff919062000703565b5090565b6200072891905b80821115620007245760008160009055506001016200070a565b5090565b90565b6139b6806200073b6000396000f3fe6080604052600436106101ac576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ffc9a7146101b157806306fdde0314610223578063081812fc146102b3578063095ea7b31461032e57806318160ddd1461038957806323b872dd146103b45780632f745c591461042f57806342842e0e1461049e5780634f6ccce71461051957806350bb4e7f146105685780635f029ebe146106725780636352211e146106c157806367e404ce1461073c5780636da039c91461079357806370a082311461082a578063715018a61461088f5780638da5cb5b146108a65780638f32d59b146108fd57806395d89b411461092c578063983b2d56146109bc5780639865027514610a0d5780639bca8b6e14610a24578063a22cb46514610a75578063aa271e1a14610ad2578063b88d4fde14610b3b578063c598db9114610c4d578063c87b56dd14610ca4578063d2491dc914610d58578063de0e9a3e14610d93578063e12eb0ee14610de6578063e3d08d9814610e3d578063e985e9c514610e94578063f2390cd414610f1d578063f2fde38b14610f48575b600080fd5b3480156101bd57600080fd5b50610209600480360360208110156101d457600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610f99565b604051808215151515815260200191505060405180910390f35b34801561022f57600080fd5b50610238611001565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561027857808201518184015260208101905061025d565b50505050905090810190601f1680156102a55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102bf57600080fd5b506102ec600480360360208110156102d657600080fd5b81019080803590602001909291905050506110a3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561033a57600080fd5b506103876004803603604081101561035157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110f4565b005b34801561039557600080fd5b5061039e611239565b6040518082815260200191505060405180910390f35b3480156103c057600080fd5b5061042d600480360360608110156103d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611246565b005b34801561043b57600080fd5b506104886004803603604081101561045257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061126b565b6040518082815260200191505060405180910390f35b3480156104aa57600080fd5b50610517600480360360608110156104c157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506112e2565b005b34801561052557600080fd5b506105526004803603602081101561053c57600080fd5b8101908080359060200190929190505050611303565b6040518082815260200191505060405180910390f35b34801561057457600080fd5b506106586004803603606081101561058b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156105d257600080fd5b8201836020820111156105e457600080fd5b8035906020019184600183028401116401000000008311171561060657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061133b565b604051808215151515815260200191505060405180910390f35b34801561067e57600080fd5b506106ab6004803603602081101561069557600080fd5b8101908080359060200190929190505050611370565b6040518082815260200191505060405180910390f35b3480156106cd57600080fd5b506106fa600480360360208110156106e457600080fd5b810190808035906020019092919050505061173d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561074857600080fd5b506107516117bb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561079f57600080fd5b506107cc600480360360208110156107b657600080fd5b81019080803590602001909291905050506117e1565b604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182600381111561081457fe5b60ff168152602001935050505060405180910390f35b34801561083657600080fd5b506108796004803603602081101561084d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611838565b6040518082815260200191505060405180910390f35b34801561089b57600080fd5b506108a46118bc565b005b3480156108b257600080fd5b506108bb61198e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561090957600080fd5b506109126119b7565b604051808215151515815260200191505060405180910390f35b34801561093857600080fd5b50610941611a0e565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610981578082015181840152602081019050610966565b50505050905090810190601f1680156109ae5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156109c857600080fd5b50610a0b600480360360208110156109df57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ab0565b005b348015610a1957600080fd5b50610a22611ad0565b005b348015610a3057600080fd5b50610a7360048036036020811015610a4757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611adb565b005b348015610a8157600080fd5b50610ad060048036036040811015610a9857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611bc9565b005b348015610ade57600080fd5b50610b2160048036036020811015610af557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d05565b604051808215151515815260200191505060405180910390f35b348015610b4757600080fd5b50610c4b60048036036080811015610b5e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610bc557600080fd5b820183602082011115610bd757600080fd5b80359060200191846001830284011164010000000083111715610bf957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611d22565b005b348015610c5957600080fd5b50610c62611d4a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610cb057600080fd5b50610cdd60048036036020811015610cc757600080fd5b8101908080359060200190929190505050611d74565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610d1d578082015181840152602081019050610d02565b50505050905090810190601f168015610d4a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610d6457600080fd5b50610d9160048036036020811015610d7b57600080fd5b8101908080359060200190929190505050611e3d565b005b348015610d9f57600080fd5b50610dcc60048036036020811015610db657600080fd5b810190808035906020019092919050505061212b565b604051808215151515815260200191505060405180910390f35b348015610df257600080fd5b50610dfb612438565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610e4957600080fd5b50610e5261245e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610ea057600080fd5b50610f0360048036036040811015610eb757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612484565b604051808215151515815260200191505060405180910390f35b348015610f2957600080fd5b50610f32612518565b6040518082815260200191505060405180910390f35b348015610f5457600080fd5b50610f9760048036036020811015610f6b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061251e565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600a8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110995780601f1061106e57610100808354040283529160200191611099565b820191906000526020600020905b81548152906001019060200180831161107c57829003601f168201915b5050505050905090565b60006110ae8261253d565b15156110b957600080fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006110ff8261173d565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561113c57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061117c575061117b8133612484565b5b151561118757600080fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600880549050905090565b61125033826125af565b151561125b57600080fd5b611266838383612644565b505050565b600061127683611838565b8210151561128357600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811015156112cf57fe5b9060005260206000200154905092915050565b6112fe8383836020604051908101604052806000815250611d22565b505050565b600061130d611239565b8210151561131a57600080fd5b60088281548110151561132957fe5b90600052602060002001549050919050565b600061134633611d05565b151561135157600080fd5b61135b8484612668565b6113658383612689565b600190509392505050565b600080600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600060038111156113a557fe5b6013600085815260200190815260200160002060010160149054906101000a900460ff1660038111156113d457fe5b14151515611470576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f506c656173652070726f76654f776e6572736869702829206f6620434450206281526020017f65666f7265207772617070696e6700000000000000000000000000000000000081525060400191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166013600085815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561156f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260398152602001807f596f75206d757374206265207468652070726569766f75734f776e6572206f6681526020017f207468652043445020746f2063726561746520616e204459540000000000000081525060400191505060405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663de5f5517856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b1580156115f357600080fd5b505afa158015611607573d6000803e3d6000fd5b505050506040513d602081101561161d57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff161415156116df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260338152602001807f5472616e73666572206f776e65727368697020746f207468697320636f6e747281526020017f616374206265666f7265207772617070696e670000000000000000000000000081525060400191505060405180910390fd5b6116e9600e6126c9565b91506116fe33836116f9866126ea565b61133b565b5060026013600085815260200190815260200160002060010160146101000a81548160ff0219169083600381111561173257fe5b021790555050919050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156117b257600080fd5b80915050919050565b601260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60136020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16905083565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561187557600080fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6118c46119b7565b15156118cf57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6060600b8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611aa65780601f10611a7b57610100808354040283529160200191611aa6565b820191906000526020600020905b815481529060010190602001808311611a8957829003601f168201915b5050505050905090565b611ab933611d05565b1515611ac457600080fd5b611acd816127b6565b50565b611ad933612810565b565b611ae361198e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611b85576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f556e617574686f7269736564000000000000000000000000000000000000000081525060200191505060405180910390fd5b80600f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611c0457600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6000611d1b82600d61286a90919063ffffffff16565b9050919050565b611d2d848484611246565b611d39848484846128fe565b1515611d4457600080fd5b50505050565b6000600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060611d7f8261253d565b1515611d8a57600080fd5b600c60008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e315780601f10611e0657610100808354040283529160200191611e31565b820191906000526020600020905b815481529060010190602001808311611e1457829003601f168201915b50505050509050919050565b6000600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816010819055508073ffffffffffffffffffffffffffffffffffffffff1663de5f5517836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b158015611ed857600080fd5b505afa158015611eec573d6000803e3d6000fd5b505050506040513d6020811015611f0257600080fd5b8101908080519060200190929190505050601160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033601260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff16601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561207f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001807f546865206d73672e73656e646572206973206e6f7420746865206f776e65722081526020017f6f6620746865204344500000000000000000000000000000000000000000000081525060400191505060405180910390fd5b816013600084815260200190815260200160002060000181905550336013600084815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016013600084815260200190815260200160002060010160146101000a81548160ff0219169083600381111561212257fe5b02179055505050565b60006121368261173d565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156121fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001807f4f6e6c792074686520445954206f776e65722063616e20756e7772617020746881526020017f65204e465400000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60603073ffffffffffffffffffffffffffffffffffffffff1663c87b56dd846040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060006040518083038186803b15801561226d57600080fd5b505afa158015612281573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156122ab57600080fd5b8101908080516401000000008111156122c357600080fd5b828101905060208101848111156122d957600080fd5b81518560018202830111640100000000821117156122f657600080fd5b50509291905050509050600061230b82612b21565b90506000600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663baa8529c83336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b1580156123d757600080fd5b505af11580156123eb573d6000803e3d6000fd5b505050506123f885612b4d565b60036013600084815260200190815260200160002060010160146101000a81548160ff0219169083600381111561242b57fe5b0217905550505050919050565b601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60105481565b6125266119b7565b151561253157600080fd5b61253a81612b62565b50565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6000806125bb8361173d565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061262a57508373ffffffffffffffffffffffffffffffffffffffff16612612846110a3565b73ffffffffffffffffffffffffffffffffffffffff16145b8061263b575061263a8185612484565b5b91505092915050565b61264f838383612c5c565b6126598382612ec1565b6126638282613065565b505050565b612672828261312c565b61267c8282613065565b612685816132c5565b5050565b6126928261253d565b151561269d57600080fd5b80600c600084815260200190815260200160002090805190602001906126c4929190613871565b505050565b60006001826000016000828254019250508190555081600001549050919050565b60608060206040519080825280601f01601f1916602001820160405280156127215781602001600182028038833980820191505090505b50905060005b60208110156127ac57838160208110151561273e57fe5b1a7f010000000000000000000000000000000000000000000000000000000000000002828281518110151561276f57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612727565b5080915050919050565b6127ca81600d61331190919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b61282481600d6133c190919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156128a757600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600061291f8473ffffffffffffffffffffffffffffffffffffffff16613470565b151561292e5760019050612b19565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612a25578082015181840152602081019050612a0a565b50505050905090810190601f168015612a525780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015612a7457600080fd5b505af1158015612a88573d6000803e3d6000fd5b505050506040513d6020811015612a9e57600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b60006060829050600081511415612b3f576000600102915050612b48565b60208301519150505b919050565b612b5f612b598261173d565b82613483565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612b9e57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8273ffffffffffffffffffffffffffffffffffffffff16612c7c8261173d565b73ffffffffffffffffffffffffffffffffffffffff16141515612c9e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612cda57600080fd5b612ce3816134e2565b612d366001600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546135a290919063ffffffff16565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612dcc6001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546135c490919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000612f196001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506135a290919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114151561300c576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515612f8a57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515612fe457fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548091906001900361305e91906138f1565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561316857600080fd5b6131718161253d565b15151561317d57600080fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506132226001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546135c490919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561334d57600080fd5b613357828261286a565b15151561336357600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156133fd57600080fd5b613407828261286a565b151561341257600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600080823b905060008111915050919050565b61348d82826135e5565b6000600c60008381526020019081526020016000208054600181600116156101000203166002900490501415156134de57600c600082815260200190815260200160002060006134dd919061391d565b5b5050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561359f5760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60008282111515156135b357600080fd5b600082840390508091505092915050565b60008082840190508381101515156135db57600080fd5b8091505092915050565b6135ef828261361f565b6135f98282612ec1565b6000600760008381526020019081526020016000208190555061361b816137b3565b5050565b8173ffffffffffffffffffffffffffffffffffffffff1661363f8261173d565b73ffffffffffffffffffffffffffffffffffffffff1614151561366157600080fd5b61366a816134e2565b6136bd6001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546135a290919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b60006137ce60016008805490506135a290919063ffffffff16565b905060006009600084815260200190815260200160002054905060006008838154811015156137f957fe5b906000526020600020015490508060088381548110151561381657fe5b9060005260206000200181905550816009600083815260200190815260200160002081905550600880548091906001900361385191906138f1565b506000600960008681526020019081526020016000208190555050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106138b257805160ff19168380011785556138e0565b828001600101855582156138e0579182015b828111156138df5782518255916020019190600101906138c4565b5b5090506138ed9190613965565b5090565b815481835581811115613918578183600052602060002091820191016139179190613965565b5b505050565b50805460018160011615610100020316600290046000825580601f106139435750613962565b601f0160209004906000526020600020908101906139619190613965565b5b50565b61398791905b8082111561398357600081600090555060010161396b565b5090565b9056fea165627a7a7230582031311c51dfa45f48f90b0d1842905875bcc107ed6cfdd8f320d82d274e25cd850029",
  "deployedBytecode": "",
  "sourceMap": "429:3217:0:-;;;1006:133;8:9:-1;5:2;;;30:1;27;20:12;5:2;1006:133:0;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1006:133:0;;;;;;;;;;;;;;;;474:155:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;551:4;557:6;524:10:10;515:6;;:19;;;;;;;;;;;;;;;;;;582:6;;;;;;;;;;;549:40;;578:1;549:40;;;;;;;;;;;;640::7;236:10;659:20;;640:18;;;:40;;;:::i;:::-;1906::11;1163:10;1925:20;;1906:18;;;:40;;;:::i;:::-;1240:51:12;855:10;1259:31;;1240:18;;;:51;;;:::i;:::-;746:4:14;738:5;:12;;;;;;;;;;;;:::i;:::-;;770:6;760:7;:16;;;;;;;;;;;;:::i;:::-;;864:49;428:10;883:29;;864:18;;;:49;;;:::i;:::-;666:254;;474:155:13;;275:22:5;286:10;275;;;:22;;;:::i;:::-;1108:26:0;1122:11;1108:13;;;:26;;;:::i;:::-;1006:133;429:3217;;990:158:7;1080:10;1065:25;;:11;:25;;;;;1057:34;;;;;;;;1137:4;1101:20;:33;1122:11;1101:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;990:158;:::o;685:119:5:-;741:21;754:7;741:8;:12;;;;;;:21;;;;;:::i;:::-;789:7;777:20;;;;;;;;;;;;685:119;:::o;1144:138:0:-;1223:7;:5;;;:7;;;:::i;:::-;1209:21;;:10;:21;;;1201:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1266:11;1253:10;;:24;;;;;;;;;;;;;;;;;;1144:138;:::o;259:181:4:-;354:1;335:21;;:7;:21;;;;327:30;;;;;;;;376:18;380:4;386:7;376:3;;;:18;;;:::i;:::-;375:19;367:28;;;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;659:77:10:-;697:7;723:6;;;;;;;;;;;716:13;;659:77;:::o;786:162:4:-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;429:3217:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "429:3217:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;778:133:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;778:133:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;778:133:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1024:83:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1024:83:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1024:83:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3705:151:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3705:151:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3705:151:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3128:292;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3128:292:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3128:292:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2005:94:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2005:94:12;;;;;;;;;;;;;;;;;;;;;;;5260:180:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5260:180:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5260:180:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:182:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1671:182:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1671:182:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6079:132:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6079:132:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6079:132:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2436:148:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2436:148:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2436:148:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;555:209:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;555:209:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;555:209:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;555:209:15;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;555:209:15;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;555:209:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;555:209:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2303:661:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2303:661:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2303:661:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2530:177:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2530:177:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2530:177:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;855:21:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;855:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;881:58;;8:9:-1;5:2;;;30:1;27;20:12;5:2;881:58:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;881:58:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:150:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2156:150:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2156:150:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1347:137:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1347:137:10;;;;;;659:77;;8:9:-1;5:2;;;30:1;27;20:12;5:2;659:77:10;;;;;;;;;;;;;;;;;;;;;;;;;;;979:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;979:90:10;;;;;;;;;;;;;;;;;;;;;;;;;;;1215:87:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1215:87:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1215:87:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;508:90:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;508:90:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;508:90:5;;;;;;;;;;;;;;;;;;;;;;604:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;604:75:5;;;;;;1144:138:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1144:138:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1144:138:0;;;;;;;;;;;;;;;;;;;;;;4148:213:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4148:213:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4148:213:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;395:107:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;395:107:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;395:107:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6916:211:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6916:211:11;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;6916:211:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6916:211:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6916:211:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6916:211:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6916:211:11;;;;;;;;;;;;;;;;;;1286:85:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1286:85:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1501:151:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1501:151:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1501:151:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1501:151:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1674:435:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1674:435:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1674:435:0;;;;;;;;;;;;;;;;;;;;3141:503;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3141:503:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3141:503:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;830:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;830:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;777:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;777:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;4682:145:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4682:145:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4682:145:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;806:20:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;806:20:0;;;;;;;;;;;;;;;;;;;;;;;1655:107:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1655:107:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1655:107:10;;;;;;;;;;;;;;;;;;;;;;778:133:7;848:4;871:20;:33;892:11;871:33;;;;;;;;;;;;;;;;;;;;;;;;;;;864:40;;778:133;;;:::o;1024:83:14:-;1063:13;1095:5;1088:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1024:83;:::o;3705:151:11:-;3764:7;3791:16;3799:7;3791;:16::i;:::-;3783:25;;;;;;;;3825:15;:24;3841:7;3825:24;;;;;;;;;;;;;;;;;;;;;3818:31;;3705:151;;;:::o;3128:292::-;3191:13;3207:16;3215:7;3207;:16::i;:::-;3191:32;;3247:5;3241:11;;:2;:11;;;;3233:20;;;;;;;;3285:5;3271:19;;:10;:19;;;:58;;;;3294:35;3311:5;3318:10;3294:16;:35::i;:::-;3271:58;3263:67;;;;;;;;3368:2;3341:15;:24;3357:7;3341:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3405:7;3401:2;3385:28;;3394:5;3385:28;;;;;;;;;;;;3128:292;;;:::o;2005:94:12:-;2049:7;2075:10;:17;;;;2068:24;;2005:94;:::o;5260:180:11:-;5350:39;5369:10;5381:7;5350:18;:39::i;:::-;5342:48;;;;;;;;5401:32;5415:4;5421:2;5425:7;5401:13;:32::i;:::-;5260:180;;;:::o;1671:182:12:-;1751:7;1786:16;1796:5;1786:9;:16::i;:::-;1778:5;:24;1770:33;;;;;;;;1820:12;:19;1833:5;1820:19;;;;;;;;;;;;;;;1840:5;1820:26;;;;;;;;;;;;;;;;;;1813:33;;1671:182;;;;:::o;6079:132:11:-;6165:39;6182:4;6188:2;6192:7;6165:39;;;;;;;;;;;;;:16;:39::i;:::-;6079:132;;;:::o;2436:148:12:-;2494:7;2529:13;:11;:13::i;:::-;2521:5;:21;2513:30;;;;;;;;2560:10;2571:5;2560:17;;;;;;;;;;;;;;;;;;2553:24;;2436:148;;;:::o;555:209:15:-;661:4;350:20:5;359:10;350:8;:20::i;:::-;342:29;;;;;;;;677:18:15;683:2;687:7;677:5;:18::i;:::-;705:31;718:7;727:8;705:12;:31::i;:::-;753:4;746:11;;555:209;;;;;:::o;2303:661:0:-;2357:21;2388;2421:10;;;;;;;;;;;2388:44;;2478:19;2446:51;;;;;;;;:14;:22;2461:6;2446:22;;;;;;;;;;;:28;;;;;;;;;;;;:51;;;;;;;;;;2438:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2602:10;2562:50;;:14;:22;2577:6;2562:22;;;;;;;;;;;:36;;;;;;;;;;;;:50;;;2554:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2724:4;2688:41;;:12;:16;;;2705:6;2688:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2688:24:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2688:24:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2688:24:0;;;;;;;;;;;;;;;;:41;;;2680:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2809:14;:7;:12;:14::i;:::-;2793:30;;2829:75;2846:10;2858:13;2873:30;2896:6;2873:22;:30::i;:::-;2829:16;:75::i;:::-;;2942:17;2911:14;:22;2926:6;2911:22;;;;;;;;;;;:28;;;:48;;;;;;;;;;;;;;;;;;;;;;;;2303:661;;;;:::o;2530:177:11:-;2585:7;2604:13;2620:11;:20;2632:7;2620:20;;;;;;;;;;;;;;;;;;;;;2604:36;;2675:1;2658:19;;:5;:19;;;;2650:28;;;;;;;;2695:5;2688:12;;;2530:177;;;:::o;855:21:0:-;;;;;;;;;;;;;:::o;881:58::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2156:150:11:-;2211:7;2255:1;2238:19;;:5;:19;;;;2230:28;;;;;;;;2275:17;:24;2293:5;2275:24;;;;;;;;;;;;;;;;2268:31;;2156:150;;;:::o;1347:137:10:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1445:1;1408:40;;1429:6;;;;;;;;;;;1408:40;;;;;;;;;;;;1475:1;1458:6;;:19;;;;;;;;;;;;;;;;;;1347:137::o;659:77::-;697:7;723:6;;;;;;;;;;;716:13;;659:77;:::o;979:90::-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;1215:87:14:-;1256:13;1288:7;1281:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1215:87;:::o;508:90:5:-;350:20;359:10;350:8;:20::i;:::-;342:29;;;;;;;;572:19;583:7;572:10;:19::i;:::-;508:90;:::o;604:75::-;647:25;661:10;647:13;:25::i;:::-;604:75::o;1144:138:0:-;1223:7;:5;:7::i;:::-;1209:21;;:10;:21;;;1201:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1266:11;1253:10;;:24;;;;;;;;;;;;;;;;;;1144:138;:::o;4148:213:11:-;4233:10;4227:16;;:2;:16;;;;4219:25;;;;;;;;4291:8;4254:18;:30;4273:10;4254:30;;;;;;;;;;;;;;;:34;4285:2;4254:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;4341:2;4314:40;;4329:10;4314:40;;;4345:8;4314:40;;;;;;;;;;;;;;;;;;;;;;4148:213;;:::o;395:107:5:-;451:4;474:21;487:7;474:8;:12;;:21;;;;:::i;:::-;467:28;;395:107;;;:::o;6916:211:11:-;7022:31;7035:4;7041:2;7045:7;7022:12;:31::i;:::-;7071:48;7094:4;7100:2;7104:7;7113:5;7071:22;:48::i;:::-;7063:57;;;;;;;;6916:211;;;;:::o;1286:85:0:-;1334:7;1356:10;;;;;;;;;;;1349:17;;1286:85;:::o;1501:151:14:-;1559:13;1592:16;1600:7;1592;:16::i;:::-;1584:25;;;;;;;;1626:10;:19;1637:7;1626:19;;;;;;;;;;;1619:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1501:151;;;:::o;1674:435:0:-;1734:21;1767:10;;;;;;;;;;;1734:44;;1792:6;1784:5;:14;;;;1813:12;:16;;;1830:6;1813:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1813:24:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1813:24:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1813:24:0;;;;;;;;;;;;;;;;1804:6;;:33;;;;;;;;;;;;;;;;;;1852:10;1843:6;;:19;;;;;;;;;;;;;;;;;;1886:10;1876:20;;:6;;;;;;;;;;;:20;;;1868:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:6;1950:14;:22;1965:6;1950:22;;;;;;;;;;;:28;;:37;;;;2032:10;1993:14;:22;2008:6;1993:22;;;;;;;;;;;:36;;;:49;;;;;;;;;;;;;;;;;;2079:25;2048:14;:22;2063:6;2048:22;;;;;;;;;;;:28;;;:56;;;;;;;;;;;;;;;;;;;;;;;;1674:435;;:::o;3141:503::-;3204:4;3240:22;3248:13;3240:7;:22::i;:::-;3226:36;;:10;:36;;;3218:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3311:24;3338:4;:13;;;3352;3338:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3338:28:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3338:28:0;;;;;;39:16:-1;36:1;17:17;2:54;3338:28:0;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3338:28:0;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;3338:28:0;;;;;;3311:55;;3372:14;3389:37;3415:10;3389:25;:37::i;:::-;3372:54;;3433:21;3466:10;;;;;;;;;;;3433:44;;3483:12;:17;;;3501:6;3509:10;3483:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3483:37:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3483:37:0;;;;3563:20;3569:13;3563:5;:20::i;:::-;3620:19;3589:14;:22;3604:6;3589:22;;;;;;;;;;;:28;;;:50;;;;;;;;;;;;;;;;;;;;;;;;3141:503;;;;;;:::o;830:21::-;;;;;;;;;;;;;:::o;777:25::-;;;;;;;;;;;;;:::o;4682:145:11:-;4762:4;4785:18;:25;4804:5;4785:25;;;;;;;;;;;;;;;:35;4811:8;4785:35;;;;;;;;;;;;;;;;;;;;;;;;;4778:42;;4682:145;;;;:::o;806:20:0:-;;;;:::o;1655:107:10:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;7316:152:11:-;7373:4;7389:13;7405:11;:20;7417:7;7405:20;;;;;;;;;;;;;;;;;;;;;7389:36;;7459:1;7442:19;;:5;:19;;;;7435:26;;;7316:152;;;:::o;7831:246::-;7916:4;7932:13;7948:16;7956:7;7948;:16::i;:::-;7932:32;;7993:5;7982:16;;:7;:16;;;:51;;;;8026:7;8002:31;;:20;8014:7;8002:11;:20::i;:::-;:31;;;7982:51;:87;;;;8037:32;8054:5;8061:7;8037:16;:32::i;:::-;7982:87;7974:96;;;7831:246;;;;:::o;2958:239:12:-;3043:38;3063:4;3069:2;3073:7;3043:19;:38::i;:::-;3092:47;3125:4;3131:7;3092:32;:47::i;:::-;3150:40;3178:2;3182:7;3150:27;:40::i;:::-;2958:239;;;:::o;3452:196::-;3515:24;3527:2;3531:7;3515:11;:24::i;:::-;3550:40;3578:2;3582:7;3550:27;:40::i;:::-;3601;3633:7;3601:31;:40::i;:::-;3452:196;;:::o;1889:144:14:-;1974:16;1982:7;1974;:16::i;:::-;1966:25;;;;;;;;2023:3;2001:10;:19;2012:7;2001:19;;;;;;;;;;;:25;;;;;;;;;;;;:::i;:::-;;1889:144;;:::o;741:129:6:-;796:7;832:1;815:5;:13;;;:18;;;;;;;;;;;850:5;:13;;;843:20;;741:129;;;:::o;47:480:3:-;123:13;376:23;412:2;402:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;402:13:3;;;;376:39;;426:9;421:71;441:2;437:1;:6;421:71;;;474:8;483:1;474:11;;;;;;;;;;;;458:10;469:1;458:13;;;;;;;;;;;;;;:27;;;;;;;;;;;445:3;;;;;;;421:71;;;;511:10;497:25;;;47:480;;;:::o;685:119:5:-;741:21;754:7;741:8;:12;;:21;;;;:::i;:::-;789:7;777:20;;;;;;;;;;;;685:119;:::o;810:127::-;869:24;885:7;869:8;:15;;:24;;;;:::i;:::-;922:7;908:22;;;;;;;;;;;;810:127;:::o;786:162:4:-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;10744:347:11:-;10865:4;10890:15;:2;:13;;;:15::i;:::-;10889:16;10885:58;;;10928:4;10921:11;;;;10885:58;10953:13;10985:2;10969:36;;;11006:10;11018:4;11024:7;11033:5;10969:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10969:70:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10969:70:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10969:70:11;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10969:70:11;;;;;;;;;;;;;;;;10953:86;;658:10;11067:16;;11057:26;;;:6;:26;;;;11049:35;;;10744:347;;;;;;;:::o;532:288:3:-;615:14;639:32;680:6;639:48;;727:1;697:19;:26;:31;693:62;;;745:3;738:10;;;;;;;693:62;806:2;798:6;794:15;788:22;778:32;;770:46;;;;;:::o;9355:90:11:-;9406:32;9412:16;9420:7;9412;:16::i;:::-;9430:7;9406:5;:32::i;:::-;9355:90;:::o;1906:183:10:-;1999:1;1979:22;;:8;:22;;;;1971:31;;;;;;;;2046:8;2017:38;;2038:6;;;;;;;;;;;2017:38;;;;;;;;;;;;2074:8;2065:6;;:17;;;;;;;;;;;;;;;;;;1906:183;:::o;9819:402:11:-;9932:4;9912:24;;:16;9920:7;9912;:16::i;:::-;:24;;;9904:33;;;;;;;;9969:1;9955:16;;:2;:16;;;;9947:25;;;;;;;;9983:23;9998:7;9983:14;:23::i;:::-;10043:30;10071:1;10043:17;:23;10061:4;10043:23;;;;;;;;;;;;;;;;:27;;:30;;;;:::i;:::-;10017:17;:23;10035:4;10017:23;;;;;;;;;;;;;;;:56;;;;10107:28;10133:1;10107:17;:21;10125:2;10107:21;;;;;;;;;;;;;;;;:25;;:28;;;;:::i;:::-;10083:17;:21;10101:2;10083:21;;;;;;;;;;;;;;;:52;;;;10169:2;10146:11;:20;10158:7;10146:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10206:7;10202:2;10187:27;;10196:4;10187:27;;;;;;;;;;;;9819:402;;;:::o;6060:1128:12:-;6322:22;6347:32;6377:1;6347:12;:18;6360:4;6347:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;6322:57;;6389:18;6410:17;:26;6428:7;6410:26;;;;;;;;;;;;6389:47;;6554:14;6540:10;:28;;6536:323;;;6584:19;6606:12;:18;6619:4;6606:18;;;;;;;;;;;;;;;6625:14;6606:34;;;;;;;;;;;;;;;;;;6584:56;;6688:11;6655:12;:18;6668:4;6655:18;;;;;;;;;;;;;;;6674:10;6655:30;;;;;;;;;;;;;;;;;:44;;;;6804:10;6771:17;:30;6789:11;6771:30;;;;;;;;;;;:43;;;;6536:323;;6945:12;:18;6958:4;6945:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;6060:1128;;;;:::o;4906:183::-;5019:12;:16;5032:2;5019:16;;;;;;;;;;;;;;;:23;;;;4990:17;:26;5008:7;4990:26;;;;;;;;;;;:52;;;;5052:12;:16;5065:2;5052:16;;;;;;;;;;;;;;;5074:7;5052:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5052:30:12;;;;;;;;;;;;;;;;;;;;;;4906:183;;:::o;8320:278:11:-;8405:1;8391:16;;:2;:16;;;;8383:25;;;;;;;;8427:16;8435:7;8427;:16::i;:::-;8426:17;8418:26;;;;;;;;8478:2;8455:11;:20;8467:7;8455:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;8514:28;8540:1;8514:17;:21;8532:2;8514:21;;;;;;;;;;;;;;;;:25;;:28;;;;:::i;:::-;8490:17;:21;8508:2;8490:21;;;;;;;;;;;;;;;:52;;;;8583:7;8579:2;8558:33;;8575:1;8558:33;;;;;;;;;;;;8320:278;;:::o;5284:161:12:-;5387:10;:17;;;;5360:15;:24;5376:7;5360:24;;;;;;;;;;;:44;;;;5414:10;5430:7;5414:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5414:24:12;;;;;;;;;;;;;;;;;;;;;;5284:161;:::o;259:181:4:-;354:1;335:21;;:7;:21;;;;327:30;;;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;514:184::-;612:1;593:21;;:7;:21;;;;585:30;;;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;;;686:5;663:4;:11;;:20;675:7;663:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;514:184;;:::o;463:616:20:-;523:4;539:12;1038:7;1026:20;1018:28;;1071:1;1064:4;:8;1057:15;;;463:616;;;:::o;2323:240:14:-;2389:27;2401:5;2408:7;2389:11;:27::i;:::-;2503:1;2472:10;:19;2483:7;2472:19;;;;;;;;;;;2466:33;;;;;;;;;;;;;;;;:38;;2462:95;;;2527:10;:19;2538:7;2527:19;;;;;;;;;;;;2520:26;;;;:::i;:::-;2462:95;2323:240;;:::o;11252:171:11:-;11351:1;11315:38;;:15;:24;11331:7;11315:24;;;;;;;;;;;;;;;;;;;;;:38;;;;11311:106;;;11404:1;11369:15;:24;11385:7;11369:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11311:106;11252:171;:::o;1205:145:9:-;1263:7;1295:1;1290;:6;;1282:15;;;;;;;;1307:9;1323:1;1319;:5;1307:17;;1342:1;1335:8;;;1205:145;;;;:::o;1431:::-;1489:7;1508:9;1524:1;1520;:5;1508:17;;1548:1;1543;:6;;1535:15;;;;;;;;1568:1;1561:8;;;1431:145;;;;:::o;3920:364:12:-;3986:27;3998:5;4005:7;3986:11;:27::i;:::-;4024:48;4057:5;4064:7;4024:32;:48::i;:::-;4220:1;4191:17;:26;4209:7;4191:26;;;;;;;;;;;:30;;;;4232:45;4269:7;4232:36;:45::i;:::-;3920:364;;:::o;8871:305:11:-;8965:5;8945:25;;:16;8953:7;8945;:16::i;:::-;:25;;;8937:34;;;;;;;;8982:23;8997:7;8982:14;:23::i;:::-;9043:31;9072:1;9043:17;:24;9061:5;9043:24;;;;;;;;;;;;;;;;:28;;:31;;;;:::i;:::-;9016:17;:24;9034:5;9016:24;;;;;;;;;;;;;;;:58;;;;9115:1;9084:11;:20;9096:7;9084:20;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;9161:7;9157:1;9133:36;;9142:5;9133:36;;;;;;;;;;;;8871:305;;:::o;7476:1064:12:-;7725:22;7750:24;7772:1;7750:10;:17;;;;:21;;:24;;;;:::i;:::-;7725:49;;7784:18;7805:15;:24;7821:7;7805:24;;;;;;;;;;;;7784:45;;8151:19;8173:10;8184:14;8173:26;;;;;;;;;;;;;;;;;;8151:48;;8235:11;8210:10;8221;8210:22;;;;;;;;;;;;;;;;;:36;;;;8345:10;8314:15;:28;8330:11;8314:28;;;;;;;;;;;:41;;;;8476:10;:19;;;;;;;;;;;;:::i;:::-;;8532:1;8505:15;:24;8521:7;8505:24;;;;;;;;;;;:28;;;;7476:1064;;;;:::o;429:3217:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport 'openzeppelin-solidity/contracts/ownership/Ownable.sol';\nimport 'openzeppelin-solidity/contracts/drafts/Counter.sol';\nimport 'openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol';\nimport 'openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol';\nimport 'openzeppelin-solidity/contracts/token/ERC721/ERC721MetadataMintable.sol';\nimport './IMakerCDP.sol';\nimport './UtilsLib.sol';\n\ncontract DeftyWrap is Ownable, IERC721Metadata, ERC721Full, ERC721MetadataMintable {\n\n  using Counter for Counter.Counter;\n  Counter.Counter private tokenId;\n\n  enum WrapState {\n    Undefined,\n    PendingTransfer,\n    Wrapped,\n    Unwrapped\n  }\n\n  struct ProofOfOwnership {\n    bytes32 cdpId;\n    address previousOwner;\n    WrapState state;\n  }\n\n  address public cdpAddress;\n  bytes32 public cupId;\n  address public cupLad;\n  address public sender;\n\n  mapping(bytes32 => ProofOfOwnership) public proofRegistery;\n\n  event Wrap(address sender, bytes32 cdpId, address myself);\n\n  constructor(address _cdpAddress)\n    Ownable()\n    ERC721Full('DeftyToken', 'DTY')\n    public\n  {\n    setCdpAddress(_cdpAddress);\n  }\n\n\n  function setCdpAddress(address _cdpAddress) public {\n    require(msg.sender == owner(), 'Unauthorised');\n    cdpAddress = _cdpAddress;\n  }\n\n  function getCdpAddress() view external returns (address) {\n    return cdpAddress;\n  }\n\n  /*\n    - Receive an existing cdpId\n    - If msg.sender is the current 'lad' we create a temporary NFT.\n      associate it to the cdpId and set it's state to inactive\n    - Set the owner of the tempNFT to msg.sender\n    The next step for the user would be to .give() the cdp to this contract.\n  */\n  function proveOwnership(bytes32 _cdpId)\n    public\n  {\n\n    MakerCDP untrustedMkr = MakerCDP(cdpAddress);\n    cupId = _cdpId;\n    cupLad = untrustedMkr.lad(_cdpId);\n    sender = msg.sender;\n    require(cupLad == msg.sender, 'The msg.sender is not the owner of the CDP');\n\n    proofRegistery[_cdpId].cdpId = _cdpId;\n    proofRegistery[_cdpId].previousOwner = msg.sender;\n    proofRegistery[_cdpId].state = WrapState.PendingTransfer;\n  }\n\n  /*\n    - We check that the contract is the owner of the cdp\n    - And that the sender is the owner of the tempNFT\n    - create a real NFT from the temp NFT\n    - destroy the temp NFT\n  */\n  function wrap(bytes32 _cdpId)\n    public\n    returns (uint256 _deftyTokenId)\n  {\n    MakerCDP untrustedMkr = MakerCDP(cdpAddress);\n    require(proofRegistery[_cdpId].state != WrapState.Undefined, 'Please proveOwnership() of CDP before wrapping');\n    require(proofRegistery[_cdpId].previousOwner == msg.sender, 'You must be the preivousOwner of the CDP to create an DYT');\n    require(untrustedMkr.lad(_cdpId) == address(this), 'Transfer ownership to this contract before wrapping');\n\n     _deftyTokenId = tokenId.next();\n    mintWithTokenURI(msg.sender, _deftyTokenId, UtilsLib._bytes32ToStr(_cdpId));\n\n    proofRegistery[_cdpId].state = WrapState.Wrapped;\n  }\n\n  /*\n    Since we are the owner, unwrapping is easy.\n    - Check that msg.sender is NFT owner\n    - get the associated cdpId\n    - give() cdp to sender\n    - burn NFT.\n  */\n  function unwrap(uint256 _deftyTokenId)\n    public\n    returns (bool)\n  {\n    require(msg.sender == ownerOf(_deftyTokenId), 'Only the DYT owner can unwrap the NFT');\n\n    string memory _cdpString = this.tokenURI(_deftyTokenId);\n    bytes32 _cdpId = UtilsLib._stringToBytes32(_cdpString);\n\n    MakerCDP untrustedMkr = MakerCDP(cdpAddress);\n    untrustedMkr.give(_cdpId, msg.sender); // should require success of call ?\n\n    _burn(_deftyTokenId);\n    proofRegistery[_cdpId].state = WrapState.Unwrapped;\n  }\n}\n",
  "sourcePath": "/Users/vilsbole/Developer/defty/metacoin/contracts/DeftyWrap.sol",
  "ast": {
    "absolutePath": "/Users/vilsbole/Developer/defty/metacoin/contracts/DeftyWrap.sol",
    "exportedSymbols": {
      "DeftyWrap": [
        286
      ]
    },
    "id": 287,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 287,
        "sourceUnit": 991,
        "src": "25:63:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/drafts/Counter.sol",
        "file": "openzeppelin-solidity/contracts/drafts/Counter.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 287,
        "sourceUnit": 693,
        "src": "89:60:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 287,
        "sourceUnit": 1909,
        "src": "150:69:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 287,
        "sourceUnit": 2226,
        "src": "220:74:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721MetadataMintable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721MetadataMintable.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 287,
        "sourceUnit": 2073,
        "src": "295:81:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/vilsbole/Developer/defty/metacoin/contracts/IMakerCDP.sol",
        "file": "./IMakerCDP.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 287,
        "sourceUnit": 352,
        "src": "377:25:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/vilsbole/Developer/defty/metacoin/contracts/UtilsLib.sol",
        "file": "./UtilsLib.sol",
        "id": 8,
        "nodeType": "ImportDirective",
        "scope": 287,
        "sourceUnit": 473,
        "src": "403:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 990,
              "src": "451:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$990",
                "typeString": "contract Ownable"
              }
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "451:7:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11,
              "name": "IERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2225,
              "src": "460:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721Metadata_$2225",
                "typeString": "contract IERC721Metadata"
              }
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "460:15:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1908,
              "src": "477:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$1908",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 14,
            "nodeType": "InheritanceSpecifier",
            "src": "477:10:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15,
              "name": "ERC721MetadataMintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2072,
              "src": "489:22:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721MetadataMintable_$2072",
                "typeString": "contract ERC721MetadataMintable"
              }
            },
            "id": 16,
            "nodeType": "InheritanceSpecifier",
            "src": "489:22:0"
          }
        ],
        "contractDependencies": [
          669,
          743,
          753,
          990,
          1549,
          1884,
          1908,
          2035,
          2072,
          2175,
          2202,
          2225
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 286,
        "linearizedBaseContracts": [
          286,
          2072,
          669,
          1908,
          2035,
          2225,
          1884,
          2202,
          1549,
          2175,
          743,
          753,
          990
        ],
        "name": "DeftyWrap",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 19,
            "libraryName": {
              "contractScope": null,
              "id": 17,
              "name": "Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 692,
              "src": "523:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counter_$692",
                "typeString": "library Counter"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "517:34:0",
            "typeName": {
              "contractScope": null,
              "id": 18,
              "name": "Counter.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 674,
              "src": "535:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$674_storage_ptr",
                "typeString": "struct Counter.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 21,
            "name": "tokenId",
            "nodeType": "VariableDeclaration",
            "scope": 286,
            "src": "554:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$674_storage",
              "typeString": "struct Counter.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 20,
              "name": "Counter.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 674,
              "src": "554:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$674_storage_ptr",
                "typeString": "struct Counter.Counter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "canonicalName": "DeftyWrap.WrapState",
            "id": 26,
            "members": [
              {
                "id": 22,
                "name": "Undefined",
                "nodeType": "EnumValue",
                "src": "611:9:0"
              },
              {
                "id": 23,
                "name": "PendingTransfer",
                "nodeType": "EnumValue",
                "src": "626:15:0"
              },
              {
                "id": 24,
                "name": "Wrapped",
                "nodeType": "EnumValue",
                "src": "647:7:0"
              },
              {
                "id": 25,
                "name": "Unwrapped",
                "nodeType": "EnumValue",
                "src": "660:9:0"
              }
            ],
            "name": "WrapState",
            "nodeType": "EnumDefinition",
            "src": "590:83:0"
          },
          {
            "canonicalName": "DeftyWrap.ProofOfOwnership",
            "id": 33,
            "members": [
              {
                "constant": false,
                "id": 28,
                "name": "cdpId",
                "nodeType": "VariableDeclaration",
                "scope": 33,
                "src": "707:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 27,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "707:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 30,
                "name": "previousOwner",
                "nodeType": "VariableDeclaration",
                "scope": 33,
                "src": "726:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 29,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "726:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 32,
                "name": "state",
                "nodeType": "VariableDeclaration",
                "scope": 33,
                "src": "753:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_WrapState_$26",
                  "typeString": "enum DeftyWrap.WrapState"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 31,
                  "name": "WrapState",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 26,
                  "src": "753:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_WrapState_$26",
                    "typeString": "enum DeftyWrap.WrapState"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "ProofOfOwnership",
            "nodeType": "StructDefinition",
            "scope": 286,
            "src": "677:96:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 35,
            "name": "cdpAddress",
            "nodeType": "VariableDeclaration",
            "scope": 286,
            "src": "777:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 34,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "777:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 37,
            "name": "cupId",
            "nodeType": "VariableDeclaration",
            "scope": 286,
            "src": "806:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 36,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "806:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 39,
            "name": "cupLad",
            "nodeType": "VariableDeclaration",
            "scope": 286,
            "src": "830:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 38,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "830:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 41,
            "name": "sender",
            "nodeType": "VariableDeclaration",
            "scope": 286,
            "src": "855:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 40,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "855:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 45,
            "name": "proofRegistery",
            "nodeType": "VariableDeclaration",
            "scope": 286,
            "src": "881:58:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProofOfOwnership_$33_storage_$",
              "typeString": "mapping(bytes32 => struct DeftyWrap.ProofOfOwnership)"
            },
            "typeName": {
              "id": 44,
              "keyType": {
                "id": 42,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "889:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "881:36:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProofOfOwnership_$33_storage_$",
                "typeString": "mapping(bytes32 => struct DeftyWrap.ProofOfOwnership)"
              },
              "valueType": {
                "contractScope": null,
                "id": 43,
                "name": "ProofOfOwnership",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 33,
                "src": "900:16:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ProofOfOwnership_$33_storage_ptr",
                  "typeString": "struct DeftyWrap.ProofOfOwnership"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 53,
            "name": "Wrap",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47,
                  "indexed": false,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "955:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "955:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49,
                  "indexed": false,
                  "name": "cdpId",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "971:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "971:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "indexed": false,
                  "name": "myself",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "986:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "986:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "954:47:0"
            },
            "src": "944:58:0"
          },
          {
            "body": {
              "id": 68,
              "nodeType": "Block",
              "src": "1102:37:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 65,
                        "name": "_cdpAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "1122:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64,
                      "name": "setCdpAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "1108:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1108:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "1108:26:0"
                }
              ]
            },
            "documentation": null,
            "id": 69,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 58,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 57,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 990,
                  "src": "1043:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$990_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1043:9:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4465667479546f6b656e",
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1068:12:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_cca86228091682edcad2e873d87c32dae9021ee64ab7bd65bccb00baea9d5202",
                      "typeString": "literal_string \"DeftyToken\""
                    },
                    "value": "DeftyToken"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "445459",
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1082:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_25d920694fb1b6b0f7087151c1478c73fe8a1ebc3f40e9d8f49ec0c105b8ceb7",
                      "typeString": "literal_string \"DTY\""
                    },
                    "value": "DTY"
                  }
                ],
                "id": 62,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 59,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1908,
                  "src": "1057:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$1908_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1057:31:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "name": "_cdpAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "1018:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1018:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1017:21:0"
            },
            "returnParameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1102:0:0"
            },
            "scope": 286,
            "src": "1006:133:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 87,
              "nodeType": "Block",
              "src": "1195:87:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 75,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2275,
                            "src": "1209:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 76,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1209:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 77,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 915,
                            "src": "1223:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1223:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1209:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "556e617574686f7269736564",
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1232:14:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f0a93f24d3028381be5acbc4ed821462983ec319f1f822e408afc4413b15341",
                          "typeString": "literal_string \"Unauthorised\""
                        },
                        "value": "Unauthorised"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f0a93f24d3028381be5acbc4ed821462983ec319f1f822e408afc4413b15341",
                          "typeString": "literal_string \"Unauthorised\""
                        }
                      ],
                      "id": 74,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2278,
                        2279
                      ],
                      "referencedDeclaration": 2279,
                      "src": "1201:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1201:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "1201:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 83,
                      "name": "cdpAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "1253:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 84,
                      "name": "_cdpAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "1266:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1253:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "1253:24:0"
                }
              ]
            },
            "documentation": null,
            "id": 88,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setCdpAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "name": "_cdpAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "1167:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1167:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1166:21:0"
            },
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1195:0:0"
            },
            "scope": 286,
            "src": "1144:138:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 95,
              "nodeType": "Block",
              "src": "1343:28:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 93,
                    "name": "cdpAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 35,
                    "src": "1356:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 92,
                  "id": 94,
                  "nodeType": "Return",
                  "src": "1349:17:0"
                }
              ]
            },
            "documentation": null,
            "id": 96,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCdpAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1308:2:0"
            },
            "returnParameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "1334:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1334:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1333:9:0"
            },
            "scope": 286,
            "src": "1286:85:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "1727:382:0",
              "statements": [
                {
                  "assignments": [
                    102
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102,
                      "name": "untrustedMkr",
                      "nodeType": "VariableDeclaration",
                      "scope": 154,
                      "src": "1734:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MakerCDP_$351",
                        "typeString": "contract MakerCDP"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 101,
                        "name": "MakerCDP",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 351,
                        "src": "1734:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MakerCDP_$351",
                          "typeString": "contract MakerCDP"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 106,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 104,
                        "name": "cdpAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "1767:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 103,
                      "name": "MakerCDP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 351,
                      "src": "1758:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_MakerCDP_$351_$",
                        "typeString": "type(contract MakerCDP)"
                      }
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1758:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MakerCDP_$351",
                      "typeString": "contract MakerCDP"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1734:44:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 107,
                      "name": "cupId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "1784:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 108,
                      "name": "_cdpId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98,
                      "src": "1792:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1784:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "1784:14:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 111,
                      "name": "cupLad",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "1804:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 114,
                          "name": "_cdpId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "1830:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 112,
                          "name": "untrustedMkr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "1813:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MakerCDP_$351",
                            "typeString": "contract MakerCDP"
                          }
                        },
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lad",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 350,
                        "src": "1813:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                          "typeString": "function (bytes32) view external returns (address)"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1813:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1804:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "1804:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 118,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "1843:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 119,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2275,
                        "src": "1852:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1852:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1843:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "1843:19:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 124,
                          "name": "cupLad",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "1876:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 125,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2275,
                            "src": "1886:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1886:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1876:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546865206d73672e73656e646572206973206e6f7420746865206f776e6572206f662074686520434450",
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1898:44:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a90fe76650304777cfd50df4c89af73aa44c8ad387c56ccf74e64307490220b",
                          "typeString": "literal_string \"The msg.sender is not the owner of the CDP\""
                        },
                        "value": "The msg.sender is not the owner of the CDP"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a90fe76650304777cfd50df4c89af73aa44c8ad387c56ccf74e64307490220b",
                          "typeString": "literal_string \"The msg.sender is not the owner of the CDP\""
                        }
                      ],
                      "id": 123,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2278,
                        2279
                      ],
                      "referencedDeclaration": 2279,
                      "src": "1868:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1868:75:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "1868:75:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 131,
                          "name": "proofRegistery",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "1950:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProofOfOwnership_$33_storage_$",
                            "typeString": "mapping(bytes32 => struct DeftyWrap.ProofOfOwnership storage ref)"
                          }
                        },
                        "id": 133,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 132,
                          "name": "_cdpId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "1965:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1950:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProofOfOwnership_$33_storage",
                          "typeString": "struct DeftyWrap.ProofOfOwnership storage ref"
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "cdpId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "1950:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 135,
                      "name": "_cdpId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98,
                      "src": "1981:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1950:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "1950:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 138,
                          "name": "proofRegistery",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "1993:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProofOfOwnership_$33_storage_$",
                            "typeString": "mapping(bytes32 => struct DeftyWrap.ProofOfOwnership storage ref)"
                          }
                        },
                        "id": 140,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 139,
                          "name": "_cdpId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "2008:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1993:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProofOfOwnership_$33_storage",
                          "typeString": "struct DeftyWrap.ProofOfOwnership storage ref"
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "previousOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30,
                      "src": "1993:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 142,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2275,
                        "src": "2032:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2032:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1993:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "1993:49:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 146,
                          "name": "proofRegistery",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "2048:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProofOfOwnership_$33_storage_$",
                            "typeString": "mapping(bytes32 => struct DeftyWrap.ProofOfOwnership storage ref)"
                          }
                        },
                        "id": 148,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 147,
                          "name": "_cdpId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "2063:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2048:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProofOfOwnership_$33_storage",
                          "typeString": "struct DeftyWrap.ProofOfOwnership storage ref"
                        }
                      },
                      "id": 149,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32,
                      "src": "2048:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_WrapState_$26",
                        "typeString": "enum DeftyWrap.WrapState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 150,
                        "name": "WrapState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "2079:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_WrapState_$26_$",
                          "typeString": "type(enum DeftyWrap.WrapState)"
                        }
                      },
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PendingTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2079:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_WrapState_$26",
                        "typeString": "enum DeftyWrap.WrapState"
                      }
                    },
                    "src": "2048:56:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_WrapState_$26",
                      "typeString": "enum DeftyWrap.WrapState"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "2048:56:0"
                }
              ]
            },
            "documentation": null,
            "id": 155,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proveOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "name": "_cdpId",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "1698:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1698:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1697:16:0"
            },
            "returnParameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1727:0:0"
            },
            "scope": 286,
            "src": "1674:435:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 226,
              "nodeType": "Block",
              "src": "2382:582:0",
              "statements": [
                {
                  "assignments": [
                    163
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 163,
                      "name": "untrustedMkr",
                      "nodeType": "VariableDeclaration",
                      "scope": 226,
                      "src": "2388:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MakerCDP_$351",
                        "typeString": "contract MakerCDP"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 162,
                        "name": "MakerCDP",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 351,
                        "src": "2388:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MakerCDP_$351",
                          "typeString": "contract MakerCDP"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 167,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 165,
                        "name": "cdpAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "2421:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 164,
                      "name": "MakerCDP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 351,
                      "src": "2412:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_MakerCDP_$351_$",
                        "typeString": "type(contract MakerCDP)"
                      }
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2412:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MakerCDP_$351",
                      "typeString": "contract MakerCDP"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2388:44:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_WrapState_$26",
                          "typeString": "enum DeftyWrap.WrapState"
                        },
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 169,
                              "name": "proofRegistery",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "2446:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProofOfOwnership_$33_storage_$",
                                "typeString": "mapping(bytes32 => struct DeftyWrap.ProofOfOwnership storage ref)"
                              }
                            },
                            "id": 171,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 170,
                              "name": "_cdpId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 157,
                              "src": "2461:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2446:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProofOfOwnership_$33_storage",
                              "typeString": "struct DeftyWrap.ProofOfOwnership storage ref"
                            }
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32,
                          "src": "2446:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WrapState_$26",
                            "typeString": "enum DeftyWrap.WrapState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 173,
                            "name": "WrapState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "2478:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_WrapState_$26_$",
                              "typeString": "type(enum DeftyWrap.WrapState)"
                            }
                          },
                          "id": 174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Undefined",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2478:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WrapState_$26",
                            "typeString": "enum DeftyWrap.WrapState"
                          }
                        },
                        "src": "2446:51:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506c656173652070726f76654f776e6572736869702829206f6620434450206265666f7265207772617070696e67",
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2499:48:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_809776b0a70cf129ccb2bc527a9b9c17b83e4c64e6e2cb184a5ecb86ab5c7466",
                          "typeString": "literal_string \"Please proveOwnership() of CDP before wrapping\""
                        },
                        "value": "Please proveOwnership() of CDP before wrapping"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_809776b0a70cf129ccb2bc527a9b9c17b83e4c64e6e2cb184a5ecb86ab5c7466",
                          "typeString": "literal_string \"Please proveOwnership() of CDP before wrapping\""
                        }
                      ],
                      "id": 168,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2278,
                        2279
                      ],
                      "referencedDeclaration": 2279,
                      "src": "2438:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2438:110:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "2438:110:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 180,
                              "name": "proofRegistery",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "2562:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProofOfOwnership_$33_storage_$",
                                "typeString": "mapping(bytes32 => struct DeftyWrap.ProofOfOwnership storage ref)"
                              }
                            },
                            "id": 182,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 181,
                              "name": "_cdpId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 157,
                              "src": "2577:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2562:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProofOfOwnership_$33_storage",
                              "typeString": "struct DeftyWrap.ProofOfOwnership storage ref"
                            }
                          },
                          "id": 183,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "previousOwner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30,
                          "src": "2562:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 184,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2275,
                            "src": "2602:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2602:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2562:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f75206d757374206265207468652070726569766f75734f776e6572206f66207468652043445020746f2063726561746520616e20445954",
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2614:59:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c7e64103a5ec16ae0968bfcf7f0bbf41e97b865428658b0d9b92deff2fe2281c",
                          "typeString": "literal_string \"You must be the preivousOwner of the CDP to create an DYT\""
                        },
                        "value": "You must be the preivousOwner of the CDP to create an DYT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c7e64103a5ec16ae0968bfcf7f0bbf41e97b865428658b0d9b92deff2fe2281c",
                          "typeString": "literal_string \"You must be the preivousOwner of the CDP to create an DYT\""
                        }
                      ],
                      "id": 179,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2278,
                        2279
                      ],
                      "referencedDeclaration": 2279,
                      "src": "2554:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2554:120:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "2554:120:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 193,
                              "name": "_cdpId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 157,
                              "src": "2705:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 191,
                              "name": "untrustedMkr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 163,
                              "src": "2688:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MakerCDP_$351",
                                "typeString": "contract MakerCDP"
                              }
                            },
                            "id": 192,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lad",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 350,
                            "src": "2688:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32) view external returns (address)"
                            }
                          },
                          "id": 194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2688:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 196,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2326,
                              "src": "2724:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DeftyWrap_$286",
                                "typeString": "contract DeftyWrap"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DeftyWrap_$286",
                                "typeString": "contract DeftyWrap"
                              }
                            ],
                            "id": 195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2716:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2716:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2688:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5472616e73666572206f776e65727368697020746f207468697320636f6e7472616374206265666f7265207772617070696e67",
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2731:53:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a53f9179027a4dd7ad47c5b511e657154554759fe54504171eee76ee609f1e6c",
                          "typeString": "literal_string \"Transfer ownership to this contract before wrapping\""
                        },
                        "value": "Transfer ownership to this contract before wrapping"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a53f9179027a4dd7ad47c5b511e657154554759fe54504171eee76ee609f1e6c",
                          "typeString": "literal_string \"Transfer ownership to this contract before wrapping\""
                        }
                      ],
                      "id": 190,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2278,
                        2279
                      ],
                      "referencedDeclaration": 2279,
                      "src": "2680:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2680:105:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "2680:105:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 202,
                      "name": "_deftyTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 160,
                      "src": "2793:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 203,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "2809:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$674_storage",
                            "typeString": "struct Counter.Counter storage ref"
                          }
                        },
                        "id": 204,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "next",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 691,
                        "src": "2809:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$674_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$674_storage_ptr_$",
                          "typeString": "function (struct Counter.Counter storage pointer) returns (uint256)"
                        }
                      },
                      "id": 205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2809:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2793:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "2793:30:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 209,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2275,
                          "src": "2846:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2846:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 211,
                        "name": "_deftyTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "2858:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 214,
                            "name": "_cdpId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 157,
                            "src": "2896:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 212,
                            "name": "UtilsLib",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 472,
                            "src": "2873:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_UtilsLib_$472_$",
                              "typeString": "type(library UtilsLib)"
                            }
                          },
                          "id": 213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_bytes32ToStr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 448,
                          "src": "2873:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (bytes32) pure returns (string memory)"
                          }
                        },
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2873:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 208,
                      "name": "mintWithTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2071,
                      "src": "2829:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,string memory) returns (bool)"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2829:75:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "2829:75:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 218,
                          "name": "proofRegistery",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "2911:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProofOfOwnership_$33_storage_$",
                            "typeString": "mapping(bytes32 => struct DeftyWrap.ProofOfOwnership storage ref)"
                          }
                        },
                        "id": 220,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 219,
                          "name": "_cdpId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157,
                          "src": "2926:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2911:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProofOfOwnership_$33_storage",
                          "typeString": "struct DeftyWrap.ProofOfOwnership storage ref"
                        }
                      },
                      "id": 221,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32,
                      "src": "2911:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_WrapState_$26",
                        "typeString": "enum DeftyWrap.WrapState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 222,
                        "name": "WrapState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "2942:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_WrapState_$26_$",
                          "typeString": "type(enum DeftyWrap.WrapState)"
                        }
                      },
                      "id": 223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Wrapped",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2942:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_WrapState_$26",
                        "typeString": "enum DeftyWrap.WrapState"
                      }
                    },
                    "src": "2911:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_WrapState_$26",
                      "typeString": "enum DeftyWrap.WrapState"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "2911:48:0"
                }
              ]
            },
            "documentation": null,
            "id": 227,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "wrap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 157,
                  "name": "_cdpId",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "2317:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2317:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2316:16:0"
            },
            "returnParameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 160,
                  "name": "_deftyTokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "2357:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2357:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2356:23:0"
            },
            "scope": 286,
            "src": "2303:661:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 284,
              "nodeType": "Block",
              "src": "3212:432:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 235,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2275,
                            "src": "3226:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3226:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 238,
                              "name": "_deftyTokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 229,
                              "src": "3248:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 237,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1083
                            ],
                            "referencedDeclaration": 1083,
                            "src": "3240:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3240:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3226:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c792074686520445954206f776e65722063616e20756e7772617020746865204e4654",
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3264:39:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe35edf0a3f2cfbb182a8e22ee929fa75cff9db25031c85f8f72350ddfea6433",
                          "typeString": "literal_string \"Only the DYT owner can unwrap the NFT\""
                        },
                        "value": "Only the DYT owner can unwrap the NFT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe35edf0a3f2cfbb182a8e22ee929fa75cff9db25031c85f8f72350ddfea6433",
                          "typeString": "literal_string \"Only the DYT owner can unwrap the NFT\""
                        }
                      ],
                      "id": 234,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2278,
                        2279
                      ],
                      "referencedDeclaration": 2279,
                      "src": "3218:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3218:86:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "3218:86:0"
                },
                {
                  "assignments": [
                    245
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 245,
                      "name": "_cdpString",
                      "nodeType": "VariableDeclaration",
                      "scope": 284,
                      "src": "3311:24:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 244,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3311:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 250,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 248,
                        "name": "_deftyTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 229,
                        "src": "3352:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 246,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2326,
                        "src": "3338:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DeftyWrap_$286",
                          "typeString": "contract DeftyWrap"
                        }
                      },
                      "id": 247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1984,
                      "src": "3338:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (string memory)"
                      }
                    },
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3338:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3311:55:0"
                },
                {
                  "assignments": [
                    252
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 252,
                      "name": "_cdpId",
                      "nodeType": "VariableDeclaration",
                      "scope": 284,
                      "src": "3372:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 251,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3372:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 257,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 255,
                        "name": "_cdpString",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 245,
                        "src": "3415:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 253,
                        "name": "UtilsLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 472,
                        "src": "3389:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_UtilsLib_$472_$",
                          "typeString": "type(library UtilsLib)"
                        }
                      },
                      "id": 254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_stringToBytes32",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 471,
                      "src": "3389:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory) pure returns (bytes32)"
                      }
                    },
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3389:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3372:54:0"
                },
                {
                  "assignments": [
                    259
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 259,
                      "name": "untrustedMkr",
                      "nodeType": "VariableDeclaration",
                      "scope": 284,
                      "src": "3433:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MakerCDP_$351",
                        "typeString": "contract MakerCDP"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 258,
                        "name": "MakerCDP",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 351,
                        "src": "3433:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MakerCDP_$351",
                          "typeString": "contract MakerCDP"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 263,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 261,
                        "name": "cdpAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "3466:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 260,
                      "name": "MakerCDP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 351,
                      "src": "3457:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_MakerCDP_$351_$",
                        "typeString": "type(contract MakerCDP)"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3457:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MakerCDP_$351",
                      "typeString": "contract MakerCDP"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3433:44:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 267,
                        "name": "_cdpId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "3501:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 268,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2275,
                          "src": "3509:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3509:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 264,
                        "name": "untrustedMkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "3483:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MakerCDP_$351",
                          "typeString": "contract MakerCDP"
                        }
                      },
                      "id": 266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "give",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 310,
                      "src": "3483:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3483:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "3483:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 273,
                        "name": "_deftyTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 229,
                        "src": "3569:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 272,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2034,
                        1421
                      ],
                      "referencedDeclaration": 1421,
                      "src": "3563:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3563:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 275,
                  "nodeType": "ExpressionStatement",
                  "src": "3563:20:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 276,
                          "name": "proofRegistery",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "3589:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProofOfOwnership_$33_storage_$",
                            "typeString": "mapping(bytes32 => struct DeftyWrap.ProofOfOwnership storage ref)"
                          }
                        },
                        "id": 278,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 277,
                          "name": "_cdpId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 252,
                          "src": "3604:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3589:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProofOfOwnership_$33_storage",
                          "typeString": "struct DeftyWrap.ProofOfOwnership storage ref"
                        }
                      },
                      "id": 279,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32,
                      "src": "3589:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_WrapState_$26",
                        "typeString": "enum DeftyWrap.WrapState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 280,
                        "name": "WrapState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "3620:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_WrapState_$26_$",
                          "typeString": "type(enum DeftyWrap.WrapState)"
                        }
                      },
                      "id": 281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Unwrapped",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3620:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_WrapState_$26",
                        "typeString": "enum DeftyWrap.WrapState"
                      }
                    },
                    "src": "3589:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_WrapState_$26",
                      "typeString": "enum DeftyWrap.WrapState"
                    }
                  },
                  "id": 283,
                  "nodeType": "ExpressionStatement",
                  "src": "3589:50:0"
                }
              ]
            },
            "documentation": null,
            "id": 285,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unwrap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 229,
                  "name": "_deftyTokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "3157:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3157:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3156:23:0"
            },
            "returnParameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 232,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "3204:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 231,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3204:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3203:6:0"
            },
            "scope": 286,
            "src": "3141:503:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 287,
        "src": "429:3217:0"
      }
    ],
    "src": "0:3647:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/vilsbole/Developer/defty/metacoin/contracts/DeftyWrap.sol",
    "exportedSymbols": {
      "DeftyWrap": [
        286
      ]
    },
    "id": 287,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 287,
        "sourceUnit": 991,
        "src": "25:63:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/drafts/Counter.sol",
        "file": "openzeppelin-solidity/contracts/drafts/Counter.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 287,
        "sourceUnit": 693,
        "src": "89:60:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 287,
        "sourceUnit": 1909,
        "src": "150:69:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 287,
        "sourceUnit": 2226,
        "src": "220:74:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721MetadataMintable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721MetadataMintable.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 287,
        "sourceUnit": 2073,
        "src": "295:81:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/vilsbole/Developer/defty/metacoin/contracts/IMakerCDP.sol",
        "file": "./IMakerCDP.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 287,
        "sourceUnit": 352,
        "src": "377:25:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/vilsbole/Developer/defty/metacoin/contracts/UtilsLib.sol",
        "file": "./UtilsLib.sol",
        "id": 8,
        "nodeType": "ImportDirective",
        "scope": 287,
        "sourceUnit": 473,
        "src": "403:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 990,
              "src": "451:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$990",
                "typeString": "contract Ownable"
              }
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "451:7:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11,
              "name": "IERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2225,
              "src": "460:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721Metadata_$2225",
                "typeString": "contract IERC721Metadata"
              }
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "460:15:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1908,
              "src": "477:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$1908",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 14,
            "nodeType": "InheritanceSpecifier",
            "src": "477:10:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15,
              "name": "ERC721MetadataMintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2072,
              "src": "489:22:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721MetadataMintable_$2072",
                "typeString": "contract ERC721MetadataMintable"
              }
            },
            "id": 16,
            "nodeType": "InheritanceSpecifier",
            "src": "489:22:0"
          }
        ],
        "contractDependencies": [
          669,
          743,
          753,
          990,
          1549,
          1884,
          1908,
          2035,
          2072,
          2175,
          2202,
          2225
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 286,
        "linearizedBaseContracts": [
          286,
          2072,
          669,
          1908,
          2035,
          2225,
          1884,
          2202,
          1549,
          2175,
          743,
          753,
          990
        ],
        "name": "DeftyWrap",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 19,
            "libraryName": {
              "contractScope": null,
              "id": 17,
              "name": "Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 692,
              "src": "523:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counter_$692",
                "typeString": "library Counter"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "517:34:0",
            "typeName": {
              "contractScope": null,
              "id": 18,
              "name": "Counter.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 674,
              "src": "535:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$674_storage_ptr",
                "typeString": "struct Counter.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 21,
            "name": "tokenId",
            "nodeType": "VariableDeclaration",
            "scope": 286,
            "src": "554:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$674_storage",
              "typeString": "struct Counter.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 20,
              "name": "Counter.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 674,
              "src": "554:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$674_storage_ptr",
                "typeString": "struct Counter.Counter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "canonicalName": "DeftyWrap.WrapState",
            "id": 26,
            "members": [
              {
                "id": 22,
                "name": "Undefined",
                "nodeType": "EnumValue",
                "src": "611:9:0"
              },
              {
                "id": 23,
                "name": "PendingTransfer",
                "nodeType": "EnumValue",
                "src": "626:15:0"
              },
              {
                "id": 24,
                "name": "Wrapped",
                "nodeType": "EnumValue",
                "src": "647:7:0"
              },
              {
                "id": 25,
                "name": "Unwrapped",
                "nodeType": "EnumValue",
                "src": "660:9:0"
              }
            ],
            "name": "WrapState",
            "nodeType": "EnumDefinition",
            "src": "590:83:0"
          },
          {
            "canonicalName": "DeftyWrap.ProofOfOwnership",
            "id": 33,
            "members": [
              {
                "constant": false,
                "id": 28,
                "name": "cdpId",
                "nodeType": "VariableDeclaration",
                "scope": 33,
                "src": "707:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 27,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "707:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 30,
                "name": "previousOwner",
                "nodeType": "VariableDeclaration",
                "scope": 33,
                "src": "726:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 29,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "726:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 32,
                "name": "state",
                "nodeType": "VariableDeclaration",
                "scope": 33,
                "src": "753:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_WrapState_$26",
                  "typeString": "enum DeftyWrap.WrapState"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 31,
                  "name": "WrapState",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 26,
                  "src": "753:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_WrapState_$26",
                    "typeString": "enum DeftyWrap.WrapState"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "ProofOfOwnership",
            "nodeType": "StructDefinition",
            "scope": 286,
            "src": "677:96:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 35,
            "name": "cdpAddress",
            "nodeType": "VariableDeclaration",
            "scope": 286,
            "src": "777:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 34,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "777:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 37,
            "name": "cupId",
            "nodeType": "VariableDeclaration",
            "scope": 286,
            "src": "806:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 36,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "806:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 39,
            "name": "cupLad",
            "nodeType": "VariableDeclaration",
            "scope": 286,
            "src": "830:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 38,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "830:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 41,
            "name": "sender",
            "nodeType": "VariableDeclaration",
            "scope": 286,
            "src": "855:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 40,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "855:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 45,
            "name": "proofRegistery",
            "nodeType": "VariableDeclaration",
            "scope": 286,
            "src": "881:58:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProofOfOwnership_$33_storage_$",
              "typeString": "mapping(bytes32 => struct DeftyWrap.ProofOfOwnership)"
            },
            "typeName": {
              "id": 44,
              "keyType": {
                "id": 42,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "889:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "881:36:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProofOfOwnership_$33_storage_$",
                "typeString": "mapping(bytes32 => struct DeftyWrap.ProofOfOwnership)"
              },
              "valueType": {
                "contractScope": null,
                "id": 43,
                "name": "ProofOfOwnership",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 33,
                "src": "900:16:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ProofOfOwnership_$33_storage_ptr",
                  "typeString": "struct DeftyWrap.ProofOfOwnership"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 53,
            "name": "Wrap",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47,
                  "indexed": false,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "955:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "955:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49,
                  "indexed": false,
                  "name": "cdpId",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "971:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "971:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "indexed": false,
                  "name": "myself",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "986:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "986:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "954:47:0"
            },
            "src": "944:58:0"
          },
          {
            "body": {
              "id": 68,
              "nodeType": "Block",
              "src": "1102:37:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 65,
                        "name": "_cdpAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "1122:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64,
                      "name": "setCdpAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "1108:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1108:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "1108:26:0"
                }
              ]
            },
            "documentation": null,
            "id": 69,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 58,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 57,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 990,
                  "src": "1043:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$990_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1043:9:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4465667479546f6b656e",
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1068:12:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_cca86228091682edcad2e873d87c32dae9021ee64ab7bd65bccb00baea9d5202",
                      "typeString": "literal_string \"DeftyToken\""
                    },
                    "value": "DeftyToken"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "445459",
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1082:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_25d920694fb1b6b0f7087151c1478c73fe8a1ebc3f40e9d8f49ec0c105b8ceb7",
                      "typeString": "literal_string \"DTY\""
                    },
                    "value": "DTY"
                  }
                ],
                "id": 62,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 59,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1908,
                  "src": "1057:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$1908_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1057:31:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "name": "_cdpAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "1018:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1018:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1017:21:0"
            },
            "returnParameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1102:0:0"
            },
            "scope": 286,
            "src": "1006:133:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 87,
              "nodeType": "Block",
              "src": "1195:87:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 75,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2275,
                            "src": "1209:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 76,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1209:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 77,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 915,
                            "src": "1223:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1223:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1209:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "556e617574686f7269736564",
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1232:14:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f0a93f24d3028381be5acbc4ed821462983ec319f1f822e408afc4413b15341",
                          "typeString": "literal_string \"Unauthorised\""
                        },
                        "value": "Unauthorised"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f0a93f24d3028381be5acbc4ed821462983ec319f1f822e408afc4413b15341",
                          "typeString": "literal_string \"Unauthorised\""
                        }
                      ],
                      "id": 74,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2278,
                        2279
                      ],
                      "referencedDeclaration": 2279,
                      "src": "1201:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1201:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "1201:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 83,
                      "name": "cdpAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "1253:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 84,
                      "name": "_cdpAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "1266:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1253:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "1253:24:0"
                }
              ]
            },
            "documentation": null,
            "id": 88,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setCdpAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "name": "_cdpAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "1167:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1167:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1166:21:0"
            },
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1195:0:0"
            },
            "scope": 286,
            "src": "1144:138:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 95,
              "nodeType": "Block",
              "src": "1343:28:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 93,
                    "name": "cdpAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 35,
                    "src": "1356:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 92,
                  "id": 94,
                  "nodeType": "Return",
                  "src": "1349:17:0"
                }
              ]
            },
            "documentation": null,
            "id": 96,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCdpAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1308:2:0"
            },
            "returnParameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "1334:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1334:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1333:9:0"
            },
            "scope": 286,
            "src": "1286:85:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "1727:382:0",
              "statements": [
                {
                  "assignments": [
                    102
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102,
                      "name": "untrustedMkr",
                      "nodeType": "VariableDeclaration",
                      "scope": 154,
                      "src": "1734:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MakerCDP_$351",
                        "typeString": "contract MakerCDP"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 101,
                        "name": "MakerCDP",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 351,
                        "src": "1734:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MakerCDP_$351",
                          "typeString": "contract MakerCDP"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 106,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 104,
                        "name": "cdpAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "1767:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 103,
                      "name": "MakerCDP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 351,
                      "src": "1758:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_MakerCDP_$351_$",
                        "typeString": "type(contract MakerCDP)"
                      }
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1758:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MakerCDP_$351",
                      "typeString": "contract MakerCDP"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1734:44:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 107,
                      "name": "cupId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "1784:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 108,
                      "name": "_cdpId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98,
                      "src": "1792:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1784:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "1784:14:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 111,
                      "name": "cupLad",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "1804:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 114,
                          "name": "_cdpId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "1830:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 112,
                          "name": "untrustedMkr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "1813:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MakerCDP_$351",
                            "typeString": "contract MakerCDP"
                          }
                        },
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lad",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 350,
                        "src": "1813:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                          "typeString": "function (bytes32) view external returns (address)"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1813:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1804:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "1804:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 118,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "1843:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 119,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2275,
                        "src": "1852:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1852:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1843:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "1843:19:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 124,
                          "name": "cupLad",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "1876:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 125,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2275,
                            "src": "1886:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1886:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1876:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546865206d73672e73656e646572206973206e6f7420746865206f776e6572206f662074686520434450",
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1898:44:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a90fe76650304777cfd50df4c89af73aa44c8ad387c56ccf74e64307490220b",
                          "typeString": "literal_string \"The msg.sender is not the owner of the CDP\""
                        },
                        "value": "The msg.sender is not the owner of the CDP"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a90fe76650304777cfd50df4c89af73aa44c8ad387c56ccf74e64307490220b",
                          "typeString": "literal_string \"The msg.sender is not the owner of the CDP\""
                        }
                      ],
                      "id": 123,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2278,
                        2279
                      ],
                      "referencedDeclaration": 2279,
                      "src": "1868:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1868:75:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "1868:75:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 131,
                          "name": "proofRegistery",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "1950:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProofOfOwnership_$33_storage_$",
                            "typeString": "mapping(bytes32 => struct DeftyWrap.ProofOfOwnership storage ref)"
                          }
                        },
                        "id": 133,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 132,
                          "name": "_cdpId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "1965:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1950:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProofOfOwnership_$33_storage",
                          "typeString": "struct DeftyWrap.ProofOfOwnership storage ref"
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "cdpId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "1950:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 135,
                      "name": "_cdpId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98,
                      "src": "1981:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1950:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "1950:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 138,
                          "name": "proofRegistery",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "1993:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProofOfOwnership_$33_storage_$",
                            "typeString": "mapping(bytes32 => struct DeftyWrap.ProofOfOwnership storage ref)"
                          }
                        },
                        "id": 140,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 139,
                          "name": "_cdpId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "2008:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1993:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProofOfOwnership_$33_storage",
                          "typeString": "struct DeftyWrap.ProofOfOwnership storage ref"
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "previousOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30,
                      "src": "1993:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 142,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2275,
                        "src": "2032:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2032:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1993:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "1993:49:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 146,
                          "name": "proofRegistery",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "2048:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProofOfOwnership_$33_storage_$",
                            "typeString": "mapping(bytes32 => struct DeftyWrap.ProofOfOwnership storage ref)"
                          }
                        },
                        "id": 148,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 147,
                          "name": "_cdpId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "2063:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2048:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProofOfOwnership_$33_storage",
                          "typeString": "struct DeftyWrap.ProofOfOwnership storage ref"
                        }
                      },
                      "id": 149,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32,
                      "src": "2048:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_WrapState_$26",
                        "typeString": "enum DeftyWrap.WrapState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 150,
                        "name": "WrapState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "2079:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_WrapState_$26_$",
                          "typeString": "type(enum DeftyWrap.WrapState)"
                        }
                      },
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PendingTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2079:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_WrapState_$26",
                        "typeString": "enum DeftyWrap.WrapState"
                      }
                    },
                    "src": "2048:56:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_WrapState_$26",
                      "typeString": "enum DeftyWrap.WrapState"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "2048:56:0"
                }
              ]
            },
            "documentation": null,
            "id": 155,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proveOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "name": "_cdpId",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "1698:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1698:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1697:16:0"
            },
            "returnParameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1727:0:0"
            },
            "scope": 286,
            "src": "1674:435:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 226,
              "nodeType": "Block",
              "src": "2382:582:0",
              "statements": [
                {
                  "assignments": [
                    163
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 163,
                      "name": "untrustedMkr",
                      "nodeType": "VariableDeclaration",
                      "scope": 226,
                      "src": "2388:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MakerCDP_$351",
                        "typeString": "contract MakerCDP"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 162,
                        "name": "MakerCDP",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 351,
                        "src": "2388:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MakerCDP_$351",
                          "typeString": "contract MakerCDP"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 167,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 165,
                        "name": "cdpAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "2421:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 164,
                      "name": "MakerCDP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 351,
                      "src": "2412:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_MakerCDP_$351_$",
                        "typeString": "type(contract MakerCDP)"
                      }
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2412:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MakerCDP_$351",
                      "typeString": "contract MakerCDP"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2388:44:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_WrapState_$26",
                          "typeString": "enum DeftyWrap.WrapState"
                        },
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 169,
                              "name": "proofRegistery",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "2446:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProofOfOwnership_$33_storage_$",
                                "typeString": "mapping(bytes32 => struct DeftyWrap.ProofOfOwnership storage ref)"
                              }
                            },
                            "id": 171,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 170,
                              "name": "_cdpId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 157,
                              "src": "2461:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2446:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProofOfOwnership_$33_storage",
                              "typeString": "struct DeftyWrap.ProofOfOwnership storage ref"
                            }
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32,
                          "src": "2446:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WrapState_$26",
                            "typeString": "enum DeftyWrap.WrapState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 173,
                            "name": "WrapState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "2478:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_WrapState_$26_$",
                              "typeString": "type(enum DeftyWrap.WrapState)"
                            }
                          },
                          "id": 174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Undefined",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2478:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WrapState_$26",
                            "typeString": "enum DeftyWrap.WrapState"
                          }
                        },
                        "src": "2446:51:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506c656173652070726f76654f776e6572736869702829206f6620434450206265666f7265207772617070696e67",
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2499:48:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_809776b0a70cf129ccb2bc527a9b9c17b83e4c64e6e2cb184a5ecb86ab5c7466",
                          "typeString": "literal_string \"Please proveOwnership() of CDP before wrapping\""
                        },
                        "value": "Please proveOwnership() of CDP before wrapping"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_809776b0a70cf129ccb2bc527a9b9c17b83e4c64e6e2cb184a5ecb86ab5c7466",
                          "typeString": "literal_string \"Please proveOwnership() of CDP before wrapping\""
                        }
                      ],
                      "id": 168,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2278,
                        2279
                      ],
                      "referencedDeclaration": 2279,
                      "src": "2438:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2438:110:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "2438:110:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 180,
                              "name": "proofRegistery",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "2562:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProofOfOwnership_$33_storage_$",
                                "typeString": "mapping(bytes32 => struct DeftyWrap.ProofOfOwnership storage ref)"
                              }
                            },
                            "id": 182,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 181,
                              "name": "_cdpId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 157,
                              "src": "2577:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2562:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProofOfOwnership_$33_storage",
                              "typeString": "struct DeftyWrap.ProofOfOwnership storage ref"
                            }
                          },
                          "id": 183,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "previousOwner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30,
                          "src": "2562:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 184,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2275,
                            "src": "2602:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2602:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2562:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f75206d757374206265207468652070726569766f75734f776e6572206f66207468652043445020746f2063726561746520616e20445954",
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2614:59:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c7e64103a5ec16ae0968bfcf7f0bbf41e97b865428658b0d9b92deff2fe2281c",
                          "typeString": "literal_string \"You must be the preivousOwner of the CDP to create an DYT\""
                        },
                        "value": "You must be the preivousOwner of the CDP to create an DYT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c7e64103a5ec16ae0968bfcf7f0bbf41e97b865428658b0d9b92deff2fe2281c",
                          "typeString": "literal_string \"You must be the preivousOwner of the CDP to create an DYT\""
                        }
                      ],
                      "id": 179,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2278,
                        2279
                      ],
                      "referencedDeclaration": 2279,
                      "src": "2554:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2554:120:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "2554:120:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 193,
                              "name": "_cdpId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 157,
                              "src": "2705:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 191,
                              "name": "untrustedMkr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 163,
                              "src": "2688:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MakerCDP_$351",
                                "typeString": "contract MakerCDP"
                              }
                            },
                            "id": 192,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lad",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 350,
                            "src": "2688:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32) view external returns (address)"
                            }
                          },
                          "id": 194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2688:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 196,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2326,
                              "src": "2724:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DeftyWrap_$286",
                                "typeString": "contract DeftyWrap"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DeftyWrap_$286",
                                "typeString": "contract DeftyWrap"
                              }
                            ],
                            "id": 195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2716:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2716:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2688:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5472616e73666572206f776e65727368697020746f207468697320636f6e7472616374206265666f7265207772617070696e67",
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2731:53:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a53f9179027a4dd7ad47c5b511e657154554759fe54504171eee76ee609f1e6c",
                          "typeString": "literal_string \"Transfer ownership to this contract before wrapping\""
                        },
                        "value": "Transfer ownership to this contract before wrapping"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a53f9179027a4dd7ad47c5b511e657154554759fe54504171eee76ee609f1e6c",
                          "typeString": "literal_string \"Transfer ownership to this contract before wrapping\""
                        }
                      ],
                      "id": 190,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2278,
                        2279
                      ],
                      "referencedDeclaration": 2279,
                      "src": "2680:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2680:105:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "2680:105:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 202,
                      "name": "_deftyTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 160,
                      "src": "2793:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 203,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "2809:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$674_storage",
                            "typeString": "struct Counter.Counter storage ref"
                          }
                        },
                        "id": 204,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "next",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 691,
                        "src": "2809:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$674_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$674_storage_ptr_$",
                          "typeString": "function (struct Counter.Counter storage pointer) returns (uint256)"
                        }
                      },
                      "id": 205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2809:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2793:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "2793:30:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 209,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2275,
                          "src": "2846:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2846:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 211,
                        "name": "_deftyTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "2858:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 214,
                            "name": "_cdpId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 157,
                            "src": "2896:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 212,
                            "name": "UtilsLib",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 472,
                            "src": "2873:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_UtilsLib_$472_$",
                              "typeString": "type(library UtilsLib)"
                            }
                          },
                          "id": 213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_bytes32ToStr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 448,
                          "src": "2873:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (bytes32) pure returns (string memory)"
                          }
                        },
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2873:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 208,
                      "name": "mintWithTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2071,
                      "src": "2829:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,string memory) returns (bool)"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2829:75:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "2829:75:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 218,
                          "name": "proofRegistery",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "2911:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProofOfOwnership_$33_storage_$",
                            "typeString": "mapping(bytes32 => struct DeftyWrap.ProofOfOwnership storage ref)"
                          }
                        },
                        "id": 220,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 219,
                          "name": "_cdpId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157,
                          "src": "2926:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2911:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProofOfOwnership_$33_storage",
                          "typeString": "struct DeftyWrap.ProofOfOwnership storage ref"
                        }
                      },
                      "id": 221,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32,
                      "src": "2911:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_WrapState_$26",
                        "typeString": "enum DeftyWrap.WrapState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 222,
                        "name": "WrapState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "2942:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_WrapState_$26_$",
                          "typeString": "type(enum DeftyWrap.WrapState)"
                        }
                      },
                      "id": 223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Wrapped",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2942:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_WrapState_$26",
                        "typeString": "enum DeftyWrap.WrapState"
                      }
                    },
                    "src": "2911:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_WrapState_$26",
                      "typeString": "enum DeftyWrap.WrapState"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "2911:48:0"
                }
              ]
            },
            "documentation": null,
            "id": 227,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "wrap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 157,
                  "name": "_cdpId",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "2317:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2317:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2316:16:0"
            },
            "returnParameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 160,
                  "name": "_deftyTokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "2357:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2357:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2356:23:0"
            },
            "scope": 286,
            "src": "2303:661:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 284,
              "nodeType": "Block",
              "src": "3212:432:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 235,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2275,
                            "src": "3226:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3226:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 238,
                              "name": "_deftyTokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 229,
                              "src": "3248:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 237,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1083
                            ],
                            "referencedDeclaration": 1083,
                            "src": "3240:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3240:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3226:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c792074686520445954206f776e65722063616e20756e7772617020746865204e4654",
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3264:39:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe35edf0a3f2cfbb182a8e22ee929fa75cff9db25031c85f8f72350ddfea6433",
                          "typeString": "literal_string \"Only the DYT owner can unwrap the NFT\""
                        },
                        "value": "Only the DYT owner can unwrap the NFT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe35edf0a3f2cfbb182a8e22ee929fa75cff9db25031c85f8f72350ddfea6433",
                          "typeString": "literal_string \"Only the DYT owner can unwrap the NFT\""
                        }
                      ],
                      "id": 234,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2278,
                        2279
                      ],
                      "referencedDeclaration": 2279,
                      "src": "3218:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3218:86:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "3218:86:0"
                },
                {
                  "assignments": [
                    245
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 245,
                      "name": "_cdpString",
                      "nodeType": "VariableDeclaration",
                      "scope": 284,
                      "src": "3311:24:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 244,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3311:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 250,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 248,
                        "name": "_deftyTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 229,
                        "src": "3352:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 246,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2326,
                        "src": "3338:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DeftyWrap_$286",
                          "typeString": "contract DeftyWrap"
                        }
                      },
                      "id": 247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1984,
                      "src": "3338:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (string memory)"
                      }
                    },
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3338:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3311:55:0"
                },
                {
                  "assignments": [
                    252
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 252,
                      "name": "_cdpId",
                      "nodeType": "VariableDeclaration",
                      "scope": 284,
                      "src": "3372:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 251,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3372:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 257,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 255,
                        "name": "_cdpString",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 245,
                        "src": "3415:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 253,
                        "name": "UtilsLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 472,
                        "src": "3389:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_UtilsLib_$472_$",
                          "typeString": "type(library UtilsLib)"
                        }
                      },
                      "id": 254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_stringToBytes32",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 471,
                      "src": "3389:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory) pure returns (bytes32)"
                      }
                    },
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3389:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3372:54:0"
                },
                {
                  "assignments": [
                    259
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 259,
                      "name": "untrustedMkr",
                      "nodeType": "VariableDeclaration",
                      "scope": 284,
                      "src": "3433:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MakerCDP_$351",
                        "typeString": "contract MakerCDP"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 258,
                        "name": "MakerCDP",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 351,
                        "src": "3433:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MakerCDP_$351",
                          "typeString": "contract MakerCDP"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 263,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 261,
                        "name": "cdpAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "3466:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 260,
                      "name": "MakerCDP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 351,
                      "src": "3457:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_MakerCDP_$351_$",
                        "typeString": "type(contract MakerCDP)"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3457:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MakerCDP_$351",
                      "typeString": "contract MakerCDP"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3433:44:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 267,
                        "name": "_cdpId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "3501:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 268,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2275,
                          "src": "3509:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3509:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 264,
                        "name": "untrustedMkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "3483:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MakerCDP_$351",
                          "typeString": "contract MakerCDP"
                        }
                      },
                      "id": 266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "give",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 310,
                      "src": "3483:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3483:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "3483:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 273,
                        "name": "_deftyTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 229,
                        "src": "3569:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 272,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2034,
                        1421
                      ],
                      "referencedDeclaration": 1421,
                      "src": "3563:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3563:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 275,
                  "nodeType": "ExpressionStatement",
                  "src": "3563:20:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 276,
                          "name": "proofRegistery",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "3589:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProofOfOwnership_$33_storage_$",
                            "typeString": "mapping(bytes32 => struct DeftyWrap.ProofOfOwnership storage ref)"
                          }
                        },
                        "id": 278,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 277,
                          "name": "_cdpId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 252,
                          "src": "3604:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3589:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProofOfOwnership_$33_storage",
                          "typeString": "struct DeftyWrap.ProofOfOwnership storage ref"
                        }
                      },
                      "id": 279,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32,
                      "src": "3589:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_WrapState_$26",
                        "typeString": "enum DeftyWrap.WrapState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 280,
                        "name": "WrapState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "3620:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_WrapState_$26_$",
                          "typeString": "type(enum DeftyWrap.WrapState)"
                        }
                      },
                      "id": 281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Unwrapped",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3620:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_WrapState_$26",
                        "typeString": "enum DeftyWrap.WrapState"
                      }
                    },
                    "src": "3589:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_WrapState_$26",
                      "typeString": "enum DeftyWrap.WrapState"
                    }
                  },
                  "id": 283,
                  "nodeType": "ExpressionStatement",
                  "src": "3589:50:0"
                }
              ]
            },
            "documentation": null,
            "id": 285,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unwrap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 229,
                  "name": "_deftyTokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "3157:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3157:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3156:23:0"
            },
            "returnParameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 232,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "3204:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 231,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3204:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3203:6:0"
            },
            "scope": 286,
            "src": "3141:503:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 287,
        "src": "429:3217:0"
      }
    ],
    "src": "0:3647:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "999": {
      "events": {
        "0xb8150eb8316d342b8a2584790fe26d11127f6afd4e4779c874bcf05148135dc6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "cdpId",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "myself",
              "type": "address"
            }
          ],
          "name": "Wrap",
          "type": "event",
          "signature": "0xb8150eb8316d342b8a2584790fe26d11127f6afd4e4779c874bcf05148135dc6"
        },
        "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterAdded",
          "type": "event",
          "signature": "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6"
        },
        "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterRemoved",
          "type": "event",
          "signature": "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event",
          "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        }
      },
      "links": {},
      "address": "0x6F9d1eCA13A6028aB3d4B5744E6BdC9f9eFd4445",
      "transactionHash": "0xe7337aba9a6b0139d904d660690be4f0a7c19285a3ae287fdc6db74c0ca41e46"
    }
  },
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-01-29T12:57:51.955Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "mintWithTokenURI(address,uint256,string)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "tokenId": "The token id to mint.",
          "tokenURI": "The token URI of the minted token."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "name()": {
        "details": "Gets the token name",
        "return": "string representing the token name"
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "owner address currently marked as the owner of the given token ID"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted.     * Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}